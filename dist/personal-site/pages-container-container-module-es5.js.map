{"version":3,"sources":["webpack:///src/app/pages/catalog/api/recipe.api.ts","webpack:///src/app/pages/catalog/catalog.component.ts","webpack:///src/app/pages/catalog/catalog.component.html","webpack:///src/app/pages/catalog/components/modal/modal.component.ts","webpack:///src/app/pages/catalog/components/modal/modal.component.html","webpack:///src/app/pages/catalog/components/recipe/recipe.component.ts","webpack:///src/app/pages/catalog/components/recipe/recipe.component.html","webpack:///src/app/pages/catalog/components/searchbar/searchbar.component.ts","webpack:///src/app/pages/catalog/components/searchbar/searchbar.component.html","webpack:///src/app/pages/catalog/services/recipe-catalog.service.ts","webpack:///src/app/pages/container/container.component.ts","webpack:///src/app/pages/container/container.component.html","webpack:///src/app/pages/container/container.module.ts","webpack:///src/app/pages/container/container.routing.module.ts","webpack:///src/app/pages/header/header.component.ts","webpack:///src/app/pages/header/header.component.html","webpack:///src/app/pages/user/UserForm/user-form/user-form.component.ts","webpack:///src/app/pages/user/UserForm/user-form/user-form.component.html","webpack:///src/app/pages/user/UserList/user-list/user-list.component.ts","webpack:///src/app/pages/user/UserList/user-list/user-list.component.html","webpack:///src/app/pages/user/user.container.component.ts","webpack:///src/app/pages/user/user.container.component.html","webpack:///src/app/share/pipes/limitTo.pipe.ts"],"names":["RecipeApiService","http","BASEURL","baseUrlApi","MAX_RESULTS","search","get","pipe","res","map","item","obj","id","name","image","summary","rating","getRandomInt","preparations","x","imgObser","i","push","min","max","Math","floor","random","providedIn","CatalogComponent","serviceCatalog","cdr","cardInfo","catalogView","subs","searchRecipes","getRecipesImages","sub","recipeCatalog$","recipeImages$","subscribe","images","prep","markForCheck","forEach","unsubscribe","find","card","selector","templateUrl","styleUrls","changeDetection","OnPush","ModalComponent","backCatalog","emit","onBack","RecipeComponent","selectedCard","onSelect","SearchbarComponent","service","value","trim","val","toString","setRatingFilter","onSearch","RecipeCatalogService","ratingFilter$","RecipeCatalog","recipeImages","ratingFilter","asObservable","recipeSearch","next","getRandomImages","meals","strMealThumb","ContainerComponent","ContainerModule","declarations","imports","providers","bootstrap","routes","path","component","children","redirectTo","pathMatch","ContainerRoutingModule","forChild","exports","HeaderComponent","session","router","sessionUser$","userSession$","closeSession","navigateByUrl","onLogOut","UserFormComponent","toast","newUser","userData","userName","userPassword","userAdmin","userToEdit","userRole","createUser","success","notifyNewUser","resetForm","err","error","updateUser","form","reset","onSubmit","UserListComponent","editUser","users$","getUsers","newUserAdded$","$event","stopPropagation","confirm","deleteUser","UserContainerComponent","user","onUserSelected","TruncatePipe","args","limit","parseInt","trail","length","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaA,gB;AAGX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,OAAA,GAAU,sEAAYC,UAAtB;AACA,eAAAC,WAAA,GAAc,EAAd;AAGhB;;;;uCAEmBC,M,EAAc;AAAA;;AAChC,mBAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAqB,KAAKJ,OAAL,GAAe,gBAAf,IAAmC,CAACG,MAAD,GAAU,QAAV,GAAqBA,MAAxD,CAArB,EACEE,IADF,CACO,2DAAI,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAU;AAChC,oBAAMC,GAAG,GAAW;AAChBC,oBAAE,EAAE,GADY;AAEhBC,sBAAI,EAAEH,IAAI,CAACG,IAFK;AAGhBC,uBAAK,EAAEJ,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACI,KAAlB,GAA0B,IAHjB;AAIhBC,yBAAO,EAAE,EAJO;AAKhBC,wBAAM,EAAE,KAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqB,EAArB,CALQ;AAMhBC,8BAAY,EAAER,IAAI,CAACQ,YAAL,CAAkBT,GAAlB,CAAsB,UAACU,CAAD,EAAY;AAC9C,2BAAO;AACLN,0BAAI,EAAGM,CAAC,CAACN,IADJ;AAELC,2BAAK,EAAEK,CAAC,CAACL,KAAF,GAAUK,CAAC,CAACL,KAAZ,GAAoB;AAFtB,qBAAP;AAID,mBALa;AANE,iBAApB;AAaA,uBAAOH,GAAP;AACD,eAfe,CAAT;AAAA,aAAJ,CADP,CAAP;AAkBD;;;4CAEsB;AACrB,gBAAMS,QAAQ,GAAG,EAAjB;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,sBAAQ,CAACE,IAAT,CAAc,KAAKrB,IAAL,CAAUK,GAAV,CAAmB,oDAAnB,CAAd,EAD2B,CAE3B;AACD;;AACD,mBAAO,sDAASc,QAAT,CAAP,CANqB,CAOb;AACT;;;uCAEoBG,G,EAAKC,G,EAAK;AAC7B,mBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD;;;;;;;yBAxCUvB,gB,EAAgB,uH;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACV4B,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKY;;AAEA;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAElE;;;;;;AAJsB;;AAEV;;AAAA;;;;;;AANxB;;AACI;;AACI;;AACA;;AACI;;AAKJ;;AACJ;;AACJ;;;;;;AAPgE;;AAAA;;;;;;;;AAQhE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;;;;;AAA5E;;;;UDAEC,gB;AASX,kCAAoBC,cAApB,EAAkEC,GAAlE,EAA0F;AAAA;;AAAtE,eAAAD,cAAA,GAAAA,cAAA;AAA8C,eAAAC,GAAA,GAAAA,GAAA;AAL3D,eAAAC,QAAA,GAAmB,IAAnB;AACA,eAAAC,WAAA,GAAc,IAAd;AACC,eAAAC,IAAA,GAAuB,EAAvB;AAGqF;;;;qCAErF;AAAA;;AACN,iBAAKJ,cAAL,CAAoBK,aAApB,CAAkC,EAAlC;AACA,iBAAKL,cAAL,CAAoBM,gBAApB;AAEA,iBAAKC,GAAL,GACA,2DAAc,CAAG,KAAKP,cAAL,CAAoBQ,cAAvB,EAAuC,KAAKR,cAAL,CAAoBS,aAA3D,CAAd,EACGC,SADH,CACa,gBAA4C;AAAA;AAAA,kBAAzChC,GAAyC;AAAA,kBAApCiC,MAAoC;;AACrD,oBAAI,CAACR,WAAL,GAAmB,IAAnB;AACA,oBAAI,CAACK,cAAL,GAAsB,EAAtB;AACA9B,iBAAG,CAACC,GAAJ,CAAQ,UAACU,CAAD,EAAe;AACtBA,iBAAC,CAACL,KAAF,GAAUK,CAAC,CAACL,KAAF,GAAUK,CAAC,CAACL,KAAZ,GAAoB2B,MAAM,CAAEhB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAF,CAApC;AACAR,iBAAC,CAACD,YAAF,CAAeT,GAAf,CAAmB,UAACiC,IAAD;AAAA,yBAAUA,IAAI,CAAC5B,KAAL,GAAa4B,IAAI,CAAC5B,KAAL,GAAa4B,IAAI,CAAC5B,KAAlB,GAA0B2B,MAAM,CAAEhB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAF,CAAvD;AAAA,iBAAnB;;AACA,sBAAI,CAACW,cAAL,CAAoBhB,IAApB,CAAyBH,CAAzB;AACA,eAJD;;AAKA,oBAAI,CAACY,GAAL,CAASY,YAAT;AACD,aAVH,CADA;AAYD;;;wCAGU;AACT,iBAAKT,IAAL,CAAUU,OAAV,CAAkB,UAACP,GAAD;AAAA,qBAAuBA,GAAG,CAACQ,WAAJ,EAAvB;AAAA,aAAlB;AACD;;;uCAEYjC,E,EAAY;AACvB;AACA;AACA;AACM,iBAAKqB,WAAL,GAAmB,KAAnB;AACA,iBAAKD,QAAL,GAAgB,KAAKM,cAAL,CAAoBQ,IAApB,CAAyB,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACnC,EAAL,KAAYA,EAAtB;AAAA,aAAzB,CAAhB;AACA,iBAAKmB,GAAL,CAASY,YAAT,GANiB,CAOvB;AACD;;;mCAEQ;AACP,iBAAKV,WAAL,GAAmB,IAAnB;AACA,iBAAKD,QAAL,GAAgB,IAAhB,CAFO,CAGP;AACD;;;4BAzCeK,G,EAAmB;AAAE,iBAAKH,IAAL,CAAUZ,IAAV,CAAee,GAAf;AAAsB;;;;;;;yBAPhDR,gB,EAAgB,sJ,EAAA,gI;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA,4R;AAAA;AAAA;ACZ7B;;AAYA;;;;AAZ+B;;AAYuB;;AAAA;;;;;;;;;;wEDAzCA,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACTmB,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMkB,U;;;;;;;;;;;;;;;;;;;;;;;;AEb7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkC4B;;AACI;;AACI;;AAEA;;AACQ;;AACR;;AACJ;;AAGJ;;;;;;AARa;;AAAA;;AAGG;;AAAA;;;;;;AAXxB;;AACI;;AACI;;AACI;;AAAiC;;AAAa;;AAC9C;;AACJ;;AACA;;AAWJ;;AACJ;;;;;;AAZ8B;;AAAA;;;;UDzBrCC,c;AAEX,kCAAc;AAAA;;AAMN,eAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AANS;;;;qCAQR,CACP;;;mCAEQ;AACP,iBAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AACD;;;;;;;yBAfSF,c;AAAc,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,irB;AAAA;AAAA;ACT3B;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AAAkD;;AAAyC;;AAE/F;;AAGJ;;AACA;;AACI;;AAA0B;;AAAe;;AACzC;;AAA4D;AAAA,qBAAS,IAAAG,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAC/E;;AACI;;AACI;;AACA;;AAAwB;;AAAwB;;AACpD;;AAEJ;;AACA;;AAAiC;;AAAyC;;AAI1E;;AAoBJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AApDuB;;AAQ8B;;AAAA,wGAAA5C,EAAA;;AAA0B;;AAAA;;AAOjC;;AAAA;;AAKM;;AAAA;;AAIO;;AAAA;;AAIhB;;AAAA;;;;;;;;;;wEDnB9ByC,c,EAAc;gBAN1B,uDAM0B;iBANhB;AACTL,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD,CAHF;AAITC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMgB,U;;;;kBAIvB;;;kBAGA;;;;;;;;;;;;;;;;;;;;AEhBJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaK,e;AAEX,mCAAc;AAAA;;AAMN,eAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AANS;;;;qCAQT,CACP;;;mCAEQ9C,E,EAAY;AACnB,iBAAK8C,YAAL,CAAkBH,IAAlB,CAAuB3C,EAAvB;AACD;;;;;;;yBAfU6C,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,wN;AAAA;AAAA;ACRxB;;AACI;;AACI;;AACA;;AAAM;;AAAI;;;;AAA8B;;AAAK;;AACjD;;AACA;;AACI;;AAAI;;AAAe;;AACnB;;AACI;;AACI;;AACA;;AAAgD;;AAAyB;;AACzE;;AAAQ;AAAA,qBAAS,IAAAE,QAAA,aAAT;AAA0B,aAA1B;;AAA6C;;AAAO;;AAChE;;AAEJ;;AAGJ;;AACJ;;;;AAhBa;;AAAA;;AACK;;AAAA;;AAGN;;AAAA;;AAI4B;;AAAA;;AAAwB;;AAAA;;;;;;;;;;wEDFvDF,e,EAAe;gBAN3B,uDAM2B;iBANjB;AACTT,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMiB,U;;;;kBAIxB;;;kBAGA;;;;;;;;;;;;;;;;;;;;AEhBJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaQ,kB;AAEX,oCAAoBC,OAApB,EAAmD;AAAA;;AAA/B,eAAAA,OAAA,GAAAA,OAAA;AADpB,eAAA7C,MAAA,GAAS,IAAT;AACsD;;;;qCAE9C,CACP;;;mCAEQ8C,K,EAAe;AACtB,iBAAKD,OAAL,CAAa1B,aAAb,CAA2B2B,KAAK,CAACC,IAAN,EAA3B;AACD;;;wCAEaC,G,EAAK;AACjB,iBAAKhD,MAAL,GAAcgD,GAAG,CAACC,QAAJ,KAAiB,GAA/B;AACA,iBAAKJ,OAAL,CAAaK,eAAb,CAA6BF,GAA7B;AACD;;;;;;;yBAdUJ,kB,EAAkB,sJ;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,gB;AAAA,e;AAAA,yT;AAAA;AAAA;;;ACR/B;;AACE;;AAAkB;AAAA;;AAAA;;AAAA,qBAAU,IAAAO,QAAA,WAAV;AAAmC,aAAnC;;AAGhB;;AACE;;AACE;;AACA;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,QAAA,WAAT;AAAkC,aAAlC;;AAAwD;;AAA6B;;AAE/F;;AACF;;AACF;;AACA;;;;;;;;;wEDJWP,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTZ,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AER/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUakB,oB;AAOX,sCAAoBP,OAApB,EAA+C;AAAA;;AAA3B,eAAAA,OAAA,GAAAA,OAAA;AANb,eAAAvB,cAAA,GAAiB,IAAI,+CAAJ,EAAjB;AACA,eAAA+B,aAAA,GAAiB,IAAI,+CAAJ,EAAjB;AACA,eAAA9B,aAAA,GAAgB,IAAI,+CAAJ,EAAhB;AACC,eAAA+B,aAAA,GAAgB,IAAI,oDAAJ,CAA8B,EAA9B,CAAhB;AACA,eAAAC,YAAA,GAAe,IAAI,oDAAJ,CAA8B,EAA9B,CAAf;AACA,eAAAC,YAAA,GAAe,IAAI,oDAAJ,CAA4B,CAA5B,CAAf;AAEN,eAAKlC,cAAL,GAAsB,KAAKgC,aAAL,CAAmBG,YAAnB,EAAtB;AACA,eAAKlC,aAAL,GAAqB,KAAKgC,YAAL,CAAkBE,YAAlB,EAArB;AACA,eAAKJ,aAAL,GAAqB,KAAKG,YAAL,CAAkBC,YAAlB,EAArB;AACD;;;;wCAEoBpE,M,EAAc;AAAA;;AACjC,iBAAKwD,OAAL,CAAaa,YAAb,CAA0BrE,MAA1B,EAAkCE,IAAlC,CAAuC,mEAAY,CAAZ,CAAvC,EACIiC,SADJ,CACc,UAAChC,GAAD,EAAmB;AAC3B,oBAAI,CAAC8D,aAAL,CAAmBK,IAAnB,CAAwBnE,GAAxB;AACH,aAHH;AAID;;;6CAEsB;AAAA;;AACrB,iBAAKqD,OAAL,CAAae,eAAb,GAA+BrE,IAA/B,GAEIiC,SAFJ,CAEc,UAAChC,GAAD,EAAgB;AACxBA,iBAAG,GAAGA,GAAG,CAACC,GAAJ,CAAQ,UAACU,CAAD;AAAA,uBAAYA,CAAC,CAAC0D,KAAF,CAAQ,CAAR,EAAWC,YAAvB;AAAA,eAAR,CAAN;;AACA,oBAAI,CAACP,YAAL,CAAkBI,IAAlB,CAAuBnE,GAAvB;AACH,aALH;AAMD;;;0CACsBwD,G,EAAW;AAC/B,iBAAKQ,YAAL,CAAkBG,IAAlB,CAAuBX,GAAvB;AACF;;;;;;;yBA9BUI,oB,EAAoB,wH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACVxC,sBAAU,EAAE;AADF,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;ACVjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOamD,kB;AAEX,sCAAc;AAAA;AAAG;;;;qCAET,CAEP;;;;;;;yBANUA,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,sC;AAAA,gB;AAAA,e;AAAA;AAAA;ACJ/B;;AACA;;;;;;;;;wEDGaA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT/B,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;AEN/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAyCa8B,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,mBAHf,E;AAAE,kBALJ,CACP,4DADO,EAEP,gFAFO,EAGP,0DAHO,CAKI;;;;4HAGFA,e,EAAe;AAAA,yBAnBxB,uEAmBwB,EAlBxB,sFAkBwB,EAjBxB,wEAiBwB,EAhBxB,8FAgBwB,EAfxB,8FAewB,EAdxB,4EAcwB,EAbxB,2FAawB,EAZxB,oGAYwB,EAXxB,yFAWwB,EAVxB,8EAUwB;AAVZ,oBAGZ,4DAHY,EAIZ,gFAJY,EAKZ,0DALY;AAUY,S;AALb,O;;;;;wEAKFA,e,EAAe;gBArB3B,sDAqB2B;iBArBlB;AACRC,wBAAY,EAAE,CACZ,uEADY,EAEZ,sFAFY,EAGZ,wEAHY,EAIZ,8FAJY,EAKZ,8FALY,EAMZ,4EANY,EAOZ,2FAPY,EAQZ,oGARY,EASZ,yFATY,EAUZ,8EAVY,CADN;AAaRC,mBAAO,EAAE,CACP,4DADO,EAEP,gFAFO,EAGP,0DAHO,CAbD;AAkBRC,qBAAS,EAAE,EAlBH;AAmBRC,qBAAS,EAAE;AAnBH,W;AAqBkB,U;;;;;;;;;;;;;;;;;;AC1C5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMC,MAAM,GAAW,CAAC;AACtBC,YAAI,EAAE,EADgB;AAEtBC,iBAAS,EAAE,uEAFW;AAGtBC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE;AAFb,SADQ,EAKR;AACED,cAAI,EAAE,SADR;AAEEC,mBAAS,EAAE;AAFb,SALQ,EAST;AAAED,cAAI,EAAE,EAAR;AAAYG,oBAAU,EAAE,SAAxB;AAAmCC,mBAAS,EAAE;AAA9C,SATS;AAHY,OAAD,CAAvB;;UAoBaC,sB;;;;;cAAAA;;;;2BAAAA,sB;AAAsB,S;AAAA,kBAHxB,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;;4HAAtBM,sB,EAAsB;AAAA;AAAA,oBAFvB,4DAEuB;AAAA,S;AAFX,O;;;;;wEAEXA,sB,EAAsB;gBAJlC,sDAIkC;iBAJzB;AACRT,mBAAO,EAAE,CAAC,6DAAaU,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIyB,U;;;;;;;;;;;;;;;;;;AC3BnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWY;;AACI;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAe;;AACvF;;;;UDFDC,e;AAEX;AACA,iCAAmBC,OAAnB,EACoBC,MADpB,EACoC;AAAA;;AADjB,eAAAD,OAAA,GAAAA,OAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE/B;AACN,iBAAKC,YAAL,GAAoB,KAAKF,OAAL,CAAaG,YAAjC;AACD;;;wCAEU,CACT;AACD;;;qCAEU;AACT,iBAAKH,OAAL,CAAaI,YAAb;AACA,iBAAKH,MAAL,CAAYI,aAAZ,CAA0B,EAA1B;AACD;;;sCAEY,CACZ;AACC;;;;;;;yBArBSN,e,EAAe,wI,EAAA,uH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,s1B;AAAA;AAAA;ACX5B;;AACE;;AACE;;AAAuC;;AAA+B;;AACtE;;AACM;;AACF;;AACJ;;AACE;;AACE;;AAEI;;;;AAA8I;;AAA+C;;;;AAAsD;;AACnP;;;;AAGJ;;AACA;;AACI;;AAA2E;AAAA,qBAAS,IAAAO,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAoC;;AAAK;;AAC7I;;AAEF;;AACF;;AACF;;AACF;;;;;;;;;;AAZgC;;AAAA;;AAAyK;;AAAA;;AAClK;;AAAA;;AAK0B;;AAAA;;;;;;;;;;wEDLpDP,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT9C,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBQ;;AACG;;AAAI;;AACP;;;;;;;;AAXJ;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAAmE;AAAA;;AAAA;;AAAA;AAAA;;AAAnE;;AAEA;;AAIF;;AACF;;;;;;;;AAV+B;;AAAA,6FAAuC,UAAvC,EAAuC,0BAAvC;;AAGwC;;AAAA;;AAEhD;;AAAA;;;;UDTdoD,iB;AAGX,mCAAoBzC,OAApB,EAAmD0C,KAAnD,EAAiFxE,GAAjF,EAAyG;AAAA;;AAArF,eAAA8B,OAAA,GAAAA,OAAA;AAA+B,eAAA0C,KAAA,GAAAA,KAAA;AAA8B,eAAAxE,GAAA,GAAAA,GAAA;AAF1E,eAAAyE,OAAA,GAAU,IAAV;AACA,eAAAC,QAAA,GAAsB;AAAEC,oBAAQ,EAAE,EAAZ;AAAgBC,wBAAY,EAAE,EAA9B;AAAkCC,qBAAS,EAAE;AAA7C,WAAtB;AAIA,eAAAC,UAAA,GAAkB,EAAlB;AAHqG;;;;qCAKpG,CACP;;;wCAEa;AACZ,gBAAI,KAAKA,UAAT,EAAqB;AACnB,mBAAKL,OAAL,GAAe,KAAf;AACA,mBAAKC,QAAL,GAAgB;AAAEC,wBAAQ,EAAE,KAAKG,UAAL,CAAgBH,QAA5B;AAAsCC,4BAAY,EAAE,EAApD;AAAwDC,yBAAS,EAAE,KAAKC,UAAL,CAAgBC;AAAnF,eAAhB;AACD;AACF;;;qCAEiB;AAAA;;AAChB,gBAAI,KAAKN,OAAT,EAAkB;AAChB,mBAAK3C,OAAL,CAAakD,UAAb,CAAwB,KAAKN,QAA7B,EAAuCjE,SAAvC,CAAiD,UAAChC,GAAD,EAAkB;AACjE,sBAAI,CAAC+F,KAAL,CAAWS,OAAX,CAAmB,0BAAnB;;AACA,sBAAI,CAACnD,OAAL,CAAaoD,aAAb;;AACA,sBAAI,CAACC,SAAL;AACH,eAJC,EAKA,UAACC,GAAD,EAAS;AACP,sBAAI,CAACZ,KAAL,CAAWa,KAAX,CAAiB,oBAAjB;AACA,eAPF;AAQC,aATH,MASS;AACL,mBAAKvD,OAAL,CAAawD,UAAb,CAAwB,KAAKZ,QAA7B,EAAuCjE,SAAvC,CAAiD,UAAChC,GAAD,EAAkB;AACjE,sBAAI,CAAC+F,KAAL,CAAWS,OAAX,CAAmB,0BAAnB;;AACA,sBAAI,CAACnD,OAAL,CAAaoD,aAAb;;AACA,sBAAI,CAACC,SAAL;AACH,eAJC,EAKA,UAACC,GAAD,EAAS;AACP,sBAAI,CAACZ,KAAL,CAAWa,KAAX,CAAiB,mBAAjB;AACA,eAPF;AAQD;AACJ;;;oCAEgBE,I,EAAe;AAC9B,iBAAKd,OAAL,GAAe,IAAf;AACA,iBAAKC,QAAL,GAAgB;AACdC,sBAAQ,EAAE,EADI;AAEdC,0BAAY,EAAE,EAFA;AAGdC,uBAAS,EAAE;AAHG,aAAhB;;AAKA,gBAAIU,IAAI,IAAI,IAAZ,EAAkB;AAChBA,kBAAI,CAACA,IAAL,CAAUC,KAAV;AACD;;AACD,iBAAKxF,GAAL,CAASY,YAAT;AACD;;;;;;;yBAnDU2D,iB,EAAiB,mI,EAAA,yH,EAAA,gI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,krC;AAAA;AAAA;;;ACZ9B;;AAAwC;AAAA,qBAAU,IAAAkB,QAAA,EAAV;AAAoB,aAApB;;AACpC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAA2C;AAAA;AAAA;;AAA3C;;AAEF;;AACF;;AACA;;AAgBA;;AACI;;AAEE;;AAA8D;AAAA;AAAA;;AAA9D;;AACA;;AAAuB;;AAAU;;AAEnC;;AACA;;AACI;;AAA0B;;AAI1B;;AACF;;AACJ;;AACA;;AACA;;AACF;;AACE;;AAAwE;AAAA;;AAAA;;AAAA,qBAAS,IAAAN,SAAA,KAAT;AAAwB,aAAxB;;AAA0B;;AAA4B;;AAAQ;;AACtI;;AACA;;AAAkG;;AAAgC;;AAAI;;AACxI;;AACF;;;;;;;;AA7CwC;;AAAA,+FAAmC,UAAnC,EAAmC,0BAAnC;;AAGS;;AAAA,uGAA+B,UAA/B,EAA+B,YAA/B;;AAIvB;;AAAA;;AAmB4C;;AAAA;;AAiBM;;AAAA;;;;;;;;;;wEDpCjEZ,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACTtD,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD,CAHF;AAITC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMmB,U;;;;;;;;;;kBAK3B;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCI;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA,4EAAqD,OAArD;AAA4D,WAA5D;;AACpC;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAiD;;AACrD;;AACE;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAC1F;;AACD;;;;;;AALK;;AAAA;;AACA;;AAAA;;;;UDUCqE,iB;AAGX,mCAAoB5D,OAApB,EACoB0C,KADpB,EAEoBxE,GAFpB,EAE0C;AAAA;;AAFtB,eAAA8B,OAAA,GAAAA,OAAA;AACA,eAAA0C,KAAA,GAAAA,KAAA;AACA,eAAAxE,GAAA,GAAAA,GAAA;AAGb,eAAA2F,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAHyC;;;;qCAKxC;AAAA;;AACN,iBAAKC,MAAL,GAAc,KAAK9D,OAAL,CAAa+D,QAAb,EAAd;AACA,iBAAK/D,OAAL,CAAagE,aAAb,CAA2BrF,SAA3B,CAAqC,YAAM;AAC3C,oBAAI,CAACmF,MAAL,GAAc,MAAI,CAAC9D,OAAL,CAAa+D,QAAb,EAAd;;AACA,oBAAI,CAAC7F,GAAL,CAASY,YAAT;AACA,aAHA;AAID;;;mCAEQmF,M,EAAoBpB,Q,EAAkB;AAAA;;AAC7CoB,kBAAM,CAACC,eAAP;;AACA,gBAAIC,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5B,mBAAKnE,OAAL,CAAaoE,UAAb,CAAwBvB,QAAxB,EAAkClE,SAAlC,CAA4C,UAAChC,GAAD,EAAS;AACnD,sBAAI,CAAC+F,KAAL,CAAWS,OAAX,CAAmB,0BAAnB;;AACA,sBAAI,CAACW,MAAL,GAAc,MAAI,CAAC9D,OAAL,CAAa+D,QAAb,EAAd;;AACA,sBAAI,CAAC7F,GAAL,CAASY,YAAT;AACD,eAJD;AAKD;AACF;;;qCAEU+D,Q,EAAkBI,Q,EAAmB;AAC5C,iBAAKY,QAAL,CAAcnE,IAAd,CAAmB;AAACmD,sBAAQ,EAARA,QAAD;AAAWI,sBAAQ,EAARA;AAAX,aAAnB;AACH;;;;;;;yBA/BUW,iB,EAAiB,mI,EAAA,yH,EAAA,gI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,gK;AAAA;AAAA;ACb9B;;AACI;;;;AAOJ;;;;AAPQ;;AAAA;;;;;;;;;;;wEDYKA,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACTzE,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD,CAHF;AAITC,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMmB,U;;;;;;;;;;kBAO3B;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa8E,sB;AAEX,0CAAc;AAAA;AAAG;;;;qCAET,CACP;;;yCAEcC,I,EAAW;AACxB,iBAAKA,IAAL,GAAYA,IAAZ;AACD;;;;;;;yBATUD,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA,gB;AAAA,e;AAAA,mI;AAAA;AAAA;ACRnC;;AACI;;AAAkC;;AAAgB;;AAClD;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAe;AAAA,qBAAY,IAAAE,cAAA,QAAZ;AAAkC,aAAlC;;AAAoC;;AACrD;;AACF;;AACF;;;;AAXoB;;AAIM;;AAAA;;AACL;;AAAA;;AAEK;;AAAA;;;;;;;;;wEDCfF,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTlF,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;AERnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKamF,Y;;;;;;;oCACDvE,K,EAAewE,I,EAAY;AACnC,gBAAMC,KAAK,GAAGD,IAAI,GAAGE,QAAQ,CAACF,IAAD,EAAO,EAAP,CAAX,GAAwB,EAA1C;AACA,gBAAMG,KAAK,GAAG,KAAd;AAEA,mBAAO3E,KAAK,CAAC4E,MAAN,GAAeH,KAAf,GAAuBzE,KAAK,CAAC6E,SAAN,CAAgB,CAAhB,EAAmBJ,KAAnB,IAA4BE,KAAnD,GAA2D3E,KAAlE;AACD;;;;;;;yBANUuE,Y;AAAY,O;;;;cAAZA,Y;AAAY;;;;;wEAAZA,Y,EAAY;gBAHxB,kDAGwB;iBAHnB;AACJxH,gBAAI,EAAE;AADF,W;AAGmB,U","file":"pages-container-container-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { map, toArray, tap, take } from 'rxjs/operators';\r\nimport { Recipe, Preparation } from '../../../models/models';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeApiService {\r\n  private readonly BASEURL = environment.baseUrlApi;\r\n  private readonly MAX_RESULTS = 50;\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  public recipeSearch(search: string): Observable<Recipe[]> {\r\n    return this.http.get<any[]>(this.BASEURL + 'recipe/search/' + (!search ? 'ajiaco' : search))\r\n            .pipe(map((res) => res.map((item) => {\r\n                 const obj: Recipe = {\r\n                     id: '0', // item.id,\r\n                     name: item.name,\r\n                     image: item.image ? item.image : null,\r\n                     summary: '',\r\n                     rating: this.getRandomInt(0, 10),\r\n                     preparations: item.preparations.map((x: any) => {\r\n                       return {\r\n                         name : x.name,\r\n                         image: x.image ? x.image : null,\r\n                       };\r\n                     }),\r\n                 };\r\n                 return obj;\r\n               }\r\n             )));\r\n  }\r\n\r\n  public  getRandomImages(): Observable<any[]> {\r\n    const imgObser = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      imgObser.push(this.http.get<any>('https://www.themealdb.com/api/json/v1/1/random.php'));\r\n      // .pipe((res: any) => res.meals[0].strMealThumb));\r\n    }\r\n    return forkJoin(imgObser);\r\n            //      .pipe((res: any) => res.meals[0].strMealThumb);\r\n  }\r\n\r\n  private getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { RecipeCatalogService } from './services/recipe-catalog.service';\r\nimport { Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { Recipe, Preparation } from 'src/app/models/models';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-catalog',\r\n  templateUrl: './catalog.component.html',\r\n  styleUrls: ['./catalog.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CatalogComponent implements OnInit, OnDestroy {\r\n  public recipeCatalog$: Recipe[];\r\n\r\n\r\n  public cardInfo: Recipe = null;\r\n  public catalogView = true;\r\n  private subs: Subscription[] = [];\r\n  private set sub(sub: Subscription) { this.subs.push(sub); }\r\n\r\n  constructor(private serviceCatalog: RecipeCatalogService, private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.serviceCatalog.searchRecipes('');\r\n    this.serviceCatalog.getRecipesImages();\r\n\r\n    this.sub =\r\n    combineLatest([  this.serviceCatalog.recipeCatalog$, this.serviceCatalog.recipeImages$]).\r\n       subscribe(([ res, images ]: [ Recipe[], string[]]) => {\r\n        this.catalogView = true;\r\n        this.recipeCatalog$ = [];\r\n        res.map((x: Recipe) => {\r\n         x.image = x.image ? x.image : images[ Math.floor(Math.random() * 10) ];\r\n         x.preparations.map((prep) => prep.image = prep.image ? prep.image : images[ Math.floor(Math.random() * 10) ]);\r\n         this.recipeCatalog$.push(x);\r\n        });\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.forEach((sub: Subscription) => sub.unsubscribe());\r\n  }\r\n\r\n  onSelectCard(id: string) {\r\n    // this.sub = this.serviceCatalog.getCastMovie(id).subscribe((res) => {\r\n    //    this.casts.length = 0;\r\n    //    this.casts = res;\r\n          this.catalogView = false;\r\n          this.cardInfo = this.recipeCatalog$.find((card) => card.id === id);\r\n          this.cdr.markForCheck();\r\n    //   });\r\n  }\r\n\r\n  onBack() {\r\n    this.catalogView = true;\r\n    this.cardInfo = null;\r\n    // this.casts.length = 0;\r\n  }\r\n}\r\n","\r\n<section class=\"details-card\"  *ngIf=\"catalogView\">\r\n    <div class=\"container\">\r\n        <app-searchbar></app-searchbar>\r\n        <div class=\"row\" >\r\n            <div class=\"col-md-3\" [style.paddingBottom.px]=\"20\" *ngFor=\"let recipe of recipeCatalog$\">\r\n            \r\n            <app-recipe [card]=\"recipe\" (selectedCard)=\"onSelectCard($event)\"></app-recipe>\r\n           \r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<app-modal [card]=\"cardInfo\" (backCatalog)=\"onBack()\" *ngIf=\"!catalogView && cardInfo\"></app-modal>\r\n\r\n  \r\n  \r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { Recipe, Preparation } from 'src/app/models/models';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n   @Input()\r\n   public card: Recipe;\r\n\r\n   @Output()\r\n   public backCatalog = new EventEmitter<boolean>();\r\n\r\n   ngOnInit(): void {\r\n   }\r\n\r\n   onBack() {\r\n     this.backCatalog.emit(true);\r\n   }\r\n\r\n}\r\n","<div class=\"container\" [style.marginTop.px]=\"100\">\r\n    <div class=\"card\">\r\n        <div class=\"container-fliud\">\r\n            <div class=\"wrapper row\">\r\n                <div class=\"preview col-md-6\">\r\n\r\n                    <div class=\"preview-pic tab-content\">\r\n                       \r\n                        <div class=\"tab-pane active\" id=\"pic-{{card.id}}\"><img [src]=\"card.image\" class=\"mainimg\"/></div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"details col-md-6\">\r\n                    <h3 class=\"product-title\">{{ card.name }}</h3> \r\n                    <i class='fas fa-arrow-alt-circle-left back' title=\"Volver\" (click)=\"onBack()\"></i>\r\n                    <div class=\"rating\">\r\n                        <div class=\"stars\">\r\n                            <span class=\"fa fa-star checked\"></span>\r\n                            <span class=\"review-no\">{{ card.rating }} rating</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <p class=\"product-description\" > <span [innerHTML]=\"card.summary\"></span> </p>\r\n\r\n\r\n\r\n                    <div class=\"container\" *ngIf=\"card.preparations\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 \">\r\n                                <h3 class=\"heading-6  text-left\">Preparaciones</h3>\r\n                                <hr class=\"mx-auto\">\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngFor=\"let prep of card.preparations\">\r\n                                <div class=\"card\">\r\n                                    <img [src]=\"prep?.image\" class=\"w-100\">\r\n\r\n                                    <div class=\"card-block\">\r\n                                            {{ prep.name }}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { Recipe } from 'src/app/models/models';\r\n\r\n@Component({\r\n  selector: 'app-recipe',\r\n  templateUrl: './recipe.component.html',\r\n  styleUrls: ['./recipe.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RecipeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n   @Input()\r\n   public card: Recipe;\r\n\r\n   @Output()\r\n   public selectedCard = new EventEmitter<string>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSelect(id: string) {\r\n    this.selectedCard.emit(id);\r\n  }\r\n}\r\n","\r\n    <div class=\"card-content\">\r\n        <div class=\"card-img\">\r\n            <img [src]=\"card.image\" alt=\"\">\r\n            <span><h4>{{ card.name | limitTo: '15'}}</h4></span>\r\n        </div>\r\n        <div class=\"card-desc\">\r\n            <h3>{{ card.name }}</h3>\r\n            <div class=\"rating\">\r\n                <div class=\"stars\">\r\n                    <span class=\"fa fa-star checked fa-color\"></span>\r\n                    <span class=\"review-no\" [style.padding.px]=\"10\">{{ card.rating }} ranking</span>\r\n                    <button (click)=\"onSelect(card.id)\" class=\"btn-card\">Detalle</button>\r\n                </div>\r\n\r\n            </div>\r\n           \r\n               \r\n        </div>\r\n    </div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RecipeCatalogService } from '../../services/recipe-catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-searchbar',\r\n  templateUrl: './searchbar.component.html',\r\n  styleUrls: ['./searchbar.component.scss']\r\n})\r\nexport class SearchbarComponent implements OnInit {\r\n  rating = '1+';\r\n  constructor(private service: RecipeCatalogService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSearch(value: string) {\r\n    this.service.searchRecipes(value.trim());\r\n  }\r\n\r\n  filerByRating(val) {\r\n    this.rating = val.toString() + '+';\r\n    this.service.setRatingFilter(val);\r\n  }\r\n}\r\n","<div class=\"container h-100\" >\r\n  <form name=\"form\" (submit)=\"onSearch(txtSearch.value)\" class=\"form\">\r\n   \r\n   \r\n    <div class=\"d-flex justify-content-left h-100\">\r\n      <div class=\"searchbar\">\r\n        <input class=\"search_input\" type=\"text\" name=\"txtSearch\" #txtSearch placeholder=\"Search...\">\r\n        <span   (click)=\"onSearch(txtSearch.value)\" class=\"search_icon\"><i class=\"fas fa-search\"></i></span>\r\n\r\n      </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, pipe } from 'rxjs';\r\n\r\nimport { RecipeApiService } from '../api/recipe.api';\r\nimport { Recipe, Preparation } from '../../../models/models';\r\nimport { shareReplay, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecipeCatalogService {\r\n  public recipeCatalog$ = new Observable<Recipe[]>();\r\n  public ratingFilter$  = new Observable<number>();\r\n  public recipeImages$ = new Observable<string[]>();\r\n  private RecipeCatalog = new BehaviorSubject<Recipe[]>([]);\r\n  private recipeImages = new BehaviorSubject<string[]>([]);\r\n  private ratingFilter = new BehaviorSubject<number>(1);\r\n  constructor(private service: RecipeApiService) {\r\n    this.recipeCatalog$ = this.RecipeCatalog.asObservable();\r\n    this.recipeImages$ = this.recipeImages.asObservable();\r\n    this.ratingFilter$ = this.ratingFilter.asObservable();\r\n  }\r\n\r\n  public searchRecipes(search: string): void {\r\n    this.service.recipeSearch(search).pipe(shareReplay(1)).\r\n        subscribe((res: Recipe[]) => {\r\n          this.RecipeCatalog.next(res);\r\n      });\r\n  }\r\n\r\n  public getRecipesImages(): void {\r\n    this.service.getRandomImages().pipe(\r\n        ).\r\n        subscribe((res: any[]) => {\r\n          res = res.map((x: any) => x.meals[0].strMealThumb);\r\n          this.recipeImages.next(res);\r\n      });\r\n  }\r\n  public setRatingFilter(val: number): void {\r\n     this.ratingFilter.next(val);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  templateUrl: './container.component.html',\r\n  styleUrls: ['./container.component.scss']\r\n})\r\nexport class ContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContainerRoutingModule } from './container.routing.module';\r\nimport { HeaderComponent } from '../header/header.component';\r\n\r\n\r\nimport { UserFormComponent } from '../user/UserForm/user-form/user-form.component';\r\nimport { UserListComponent } from '../user/UserList/user-list/user-list.component';\r\nimport { RecipeComponent } from '../catalog/components/recipe/recipe.component';\r\nimport { SearchbarComponent } from '../catalog/components/searchbar/searchbar.component';\r\nimport { ContainerComponent } from './container.component';\r\nimport { UserContainerComponent } from '../user/user.container.component';\r\nimport { CatalogComponent } from '../catalog/catalog.component';\r\nimport { TruncatePipe } from 'src/app/share/pipes/limitTo.pipe';\r\nimport { ModalComponent } from '../catalog/components/modal/modal.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContainerComponent,\r\n    UserContainerComponent,\r\n    HeaderComponent,\r\n    UserFormComponent,\r\n    UserListComponent,\r\n    CatalogComponent,\r\n    RecipeComponent,\r\n    SearchbarComponent,\r\n    ModalComponent,\r\n    TruncatePipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ContainerRoutingModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class ContainerModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ContainerComponent } from './container.component';\r\nimport { UserContainerComponent } from '../user/user.container.component';\r\nimport { CatalogComponent } from '../catalog/catalog.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ContainerComponent,\r\n  children: [\r\n    {\r\n      path: 'users',\r\n      component: UserContainerComponent,\r\n    },\r\n    {\r\n      path: 'catalog',\r\n      component: CatalogComponent,\r\n    },\r\n   { path: '', redirectTo: 'catalog', pathMatch: 'full' },\r\n ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContainerRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserService } from '../user/services/user.service';\r\nimport { UserSession } from 'src/app/models/userSession';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  public sessionUser$: Observable<UserSession>;\r\n  // public sub: Subscription;\r\n  constructor(public session: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sessionUser$ = this.session.userSession$;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.sub.unsubscribe();\r\n  }\r\n\r\n  onLogOut() {\r\n    this.session.closeSession();\r\n    this.router.navigateByUrl('');\r\n  }\r\n\r\n   onGoUsers() {\r\n   // this.router.navigateByUrl('container/users');\r\n   }\r\n\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\".\">Busqueda de recetas Colombianas</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item dropdown\">\r\n          \r\n            <a class=\"nav-link\" [class.dropdown-toggle]=\"(sessionUser$  | async)?.userRole === 'admin'\" data-toggle=\"dropdown\" href=\"#\" id=\"navbardrop\" > <i class=\"fas fa-user-circle green-icon\" ></i> {{ (sessionUser$  | async)?.userName || \"Guest User\"}}</a>\r\n            <div class=\"dropdown-menu\" *ngIf=\"(sessionUser$  | async)?.userRole === 'admin'\">\r\n                <a class=\"dropdown-item\" style=\"cursor:pointer\" (click)=\"onGoUsers()\">User Management</a>\r\n              </div>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" [style.margin.px]=\"5\" (click)=\"onLogOut()\"><i class=\"fas fa-sign-out-alt\"></i> Salir</button>\r\n        </li>\r\n       \r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n\r\n\r\n\r\n","import { Component, OnInit, Input, OnChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserModel } from 'src/app/models/userLogin';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserFormComponent implements OnInit, OnChanges {\r\n  public newUser = true;\r\n  public userData: UserModel = { userName: '', userPassword: '', userAdmin: false};\r\n  constructor(private service: UserService,  private toast: ToastrService, private cdr: ChangeDetectorRef) { }\r\n\r\n  @Input()\r\n  public userToEdit: any = {};\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.userToEdit) {\r\n      this.newUser = false;\r\n      this.userData = { userName: this.userToEdit.userName, userPassword: '', userAdmin: this.userToEdit.userRole };\r\n    }\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (this.newUser) {\r\n      this.service.createUser(this.userData).subscribe((res: boolean) => {\r\n        this.toast.success('User Created Successfuly');\r\n        this.service.notifyNewUser();\r\n        this.resetForm();\r\n    },\r\n      (err) => {\r\n        this.toast.error('User already exist');\r\n       });\r\n      } else {\r\n        this.service.updateUser(this.userData).subscribe((res: boolean) => {\r\n          this.toast.success('User Updated Successfuly');\r\n          this.service.notifyNewUser();\r\n          this.resetForm();\r\n      },\r\n        (err) => {\r\n          this.toast.error('User do not exist');\r\n         });\r\n      }\r\n  }\r\n\r\n  public resetForm(form?: NgForm) {\r\n    this.newUser = true;\r\n    this.userData = {\r\n      userName: '',\r\n      userPassword: '',\r\n      userAdmin: false,\r\n    };\r\n    if (form != null) {\r\n      form.form.reset();\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <div class=\"input-group-text bg-white\">\r\n            <i class=\"fas fa-user-circle\" [class.green-icon]=\"userName.valid\" [class.red-icon]=\"userName.invalid && userName.touched\"></i>\r\n          </div>\r\n        </div>\r\n        <input name=\"userName\" #userName=\"ngModel\" [(ngModel)]=\"userData.userName\" class=\"form-control\"\r\n          placeholder=\"User Name\" required maxlength=\"40\" [disabled]=\"!newUser\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\" *ngIf=\"newUser\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <div class=\"input-group-text bg-white\">\r\n            <i class=\"fas fa-key\"  [class.green-icon]=\"userPassword.valid\" [class.red-icon]=\"userPassword.invalid && userPassword.touched\"></i>\r\n          </div>\r\n        </div>\r\n        <input type=\"password\" name=\"userPassword\" #userPassword=\"ngModel\" [(ngModel)]=\"userData.userPassword\" \r\n        class=\"form-control\" placeholder=\"password\" required maxlength=\"16\" minlength=\"5\">\r\n        <div class=\"error\" *ngIf=\"userPassword.invalid && userPassword.touched\">\r\n           <br>Invalid password (5 - 16 characters)\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <div class=\"input-group col-md-3 float-left\">\r\n       \r\n          <input type=\"checkbox\"  name=\"userAdmin\" #userAdmin=\"ngModel\" [(ngModel)]=\"userData.userAdmin\"  class=\"form-control\" >\r\n          <label for=\"userAdmin\">Admin user</label>\r\n           \r\n        </div>\r\n        <div class=\" col-md-9 float-right\">\r\n            <div class=\"input-group\"> &nbsp;\r\n           \r\n    \r\n               \r\n            </div>\r\n          </div>\r\n      </div>\r\n      <BR>\r\n      <BR>\r\n    <div class=\"form-group\" style=\"display: flex;\">\r\n      <button type=\"button\" class=\"btn btn-success btn-lg btn-block col-md-5\" (click)=\"resetForm(form)\"><i class=\"fas fa-plus\"></i> New User</button>\r\n      <div class=\"col-md-2\"></div>\r\n      <button class=\"btn btn-success btn-lg btn-block col-md-5\" type=\"submit\" [disabled]=\"form.invalid\"><i class=\"fas fa-database\"></i> Save</button>\r\n    </div>\r\n  </form>\r\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSession } from 'src/app/models/userSession';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  public users$: Observable<[UserSession]>;\r\n\r\n  constructor(private service: UserService,\r\n              private toast: ToastrService,\r\n              private cdr: ChangeDetectorRef ) { }\r\n\r\n  @Output()\r\n  public editUser = new EventEmitter<{}>();\r\n\r\n  ngOnInit(): void {\r\n    this.users$ = this.service.getUsers();\r\n    this.service.newUserAdded$.subscribe(() => {\r\n    this.users$ = this.service.getUsers();\r\n    this.cdr.markForCheck();\r\n   });\r\n  }\r\n\r\n  onDelete($event: MouseEvent, userName: string) {\r\n    $event.stopPropagation();\r\n    if (confirm('Are you sure?')) {\r\n      this.service.deleteUser(userName).subscribe((res) => {\r\n        this.toast.success('User removed successfuly');\r\n        this.users$ = this.service.getUsers();\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditUser(userName: string, userRole: boolean) {\r\n      this.editUser.emit({userName, userRole});\r\n  }\r\n\r\n}\r\n","<table class=\"table table-hover\">\r\n    <tr *ngFor=\"let user of users$ | async\" (click)=\"onEditUser(user.userName, user.userRole === 'admin')\">\r\n        <td>{{user.userName}}</td>\r\n        <td>{{user.userRole === 'admin' ? 'admin' : 'user' }}</td>\r\n        <td>\r\n          <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete($event, user.userName)\"></i>\r\n        </td>\r\n       </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-container',\r\n  templateUrl: './user.container.component.html',\r\n  styleUrls: ['./user.container.component.scss']\r\n})\r\nexport class UserContainerComponent implements OnInit {\r\n  public user: any;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onUserSelected(user: any) {\r\n    this.user = user;\r\n  }\r\n}\r\n","<div class=\"jumbtron\" [style.marginTop.px]=\"60\">\r\n    <h1 class=\"display-4 text-center\">Users Management</h1>\r\n    <hr>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-5\" [style.marginLeft.px]=\"50\">\r\n        <app-user-form [userToEdit]=\"user\" ></app-user-form>\r\n      </div>\r\n      <div class=\"col-md-5\" [style.marginLeft.px]=\"50\">\r\n        <app-user-list (editUser)=\"onUserSelected($event)\"></app-user-list>\r\n      </div>\r\n    </div>\r\n  </div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'limitTo'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(value: string, args: string): string {\r\n    const limit = args ? parseInt(args, 10) : 10;\r\n    const trail = '...';\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n}"]}