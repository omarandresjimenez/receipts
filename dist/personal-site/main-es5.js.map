{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/ensure-module-loaded-once.guard.ts","webpack:///src/app/core/overlay/overlay-request-response.interceptor.ts","webpack:///src/app/core/overlay/overlay.component.ts","webpack:///src/app/core/overlay/overlay.component.html","webpack:///src/app/core/overlay/overlay.module.ts","webpack:///src/app/core/services/core.service.ts","webpack:///src/app/core/utils/errorHandler.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/user/api/api.service.ts","webpack:///src/app/pages/user/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","routes","path","component","children","loadChildren","m","ContainerModule","redirectTo","pathMatch","AppRoutingModule","CoreModule","parentModule","EnsureModuleLoadedOnceGuard","targetModule","constructor","name","OverlayRequestResponseInterceptor","coreserv","next","callHttpRequest","handle","pipe","event","err","providedIn","OverlayComponent","httpservice","http$","httpInProcess$","enabled","sub","subscribe","res","unsubscribe","OverlayModule","provide","useClass","multi","CoreService","httpInProcess","asObservable","AppHttpErrorHandler","routerP","toastP","router","toast","status","sessionStorage","clear","navigate","error","message","LoginComponent","route","session","userLogin","userName","userPassword","userSession$","form","logAsGuest","relativeTo","onSubmit","ApiService","http","BASEURL","baseUrlApi","post","handleError","userModel","params","userRole","userAdmin","put","get","UserService","service","userSession","newUserAdded$","newUserAdded","userInfo","authenticate","getUsers","createUser","updateUser","deleteUser","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","\r\n<app-overlay></app-overlay>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ToastrModule, ToastNoAnimation,\r\n        ToastNoAnimationModule,\r\n        ToastrService} from 'ngx-toastr';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CoreModule } from './core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CoreModule,\r\n\r\n    ToastNoAnimationModule.forRoot(),\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [ HttpClient ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AppComponent,\r\n  children: [\r\n    {\r\n      path: 'container',\r\n      loadChildren: () => import('./pages/container/container.module').then((m) => m.ContainerModule),\r\n    },\r\n    {\r\n      path: 'login',\r\n      component: LoginComponent,\r\n    },\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { EnsureModuleLoadedOnceGuard } from './ensure-module-loaded-once.guard';\r\nimport { OverlayModule } from './overlay/overlay.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, HttpClientModule, OverlayModule],\r\n  exports: [RouterModule, HttpClientModule, OverlayModule ],\r\n  declarations: [],\r\n  providers: [ ] // these should be singleton\r\n})\r\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    // Ensure that CoreModule is only loaded into AppModule\r\n\r\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    super(parentModule);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","export class EnsureModuleLoadedOnceGuard {\r\n\r\n  constructor(targetModule: any) {\r\n    if (targetModule) {\r\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable, of, BehaviorSubject, throwError } from 'rxjs';\r\nimport { tap, delay, catchError } from 'rxjs/operators';\r\nimport { CoreService } from '../services/core.service';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n  }\r\n)\r\nexport class OverlayRequestResponseInterceptor implements HttpInterceptor {\r\n\r\n\r\n  constructor(private coreserv: CoreService) {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.coreserv.callHttpRequest(true);\r\n    return next\r\n          .handle(req)\r\n          .pipe(\r\n            tap(event => {\r\n              if (event instanceof HttpResponse) {\r\n                this.coreserv.callHttpRequest(false);\r\n              }\r\n            }),\r\n            catchError(err => {\r\n              this.coreserv.callHttpRequest(false);\r\n              return throwError(err);\r\n            })\r\n          );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { CoreService } from '../services/core.service';\r\n\r\n@Component({\r\n    selector: 'app-overlay',\r\n    templateUrl: './overlay.component.html',\r\n    styleUrls: ['./overlay.component.scss']\r\n})\r\nexport class OverlayComponent implements OnInit, OnDestroy {\r\n    http$: Observable<boolean> = this.httpservice.httpInProcess$;\r\n    enabled = false;\r\n    sub: Subscription;\r\n    constructor(public httpservice: CoreService) { }\r\n\r\n    ngOnInit() {\r\n      this.sub =  this.http$.subscribe((res) => this.enabled = res);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"overlay\" [class.active]=\"enabled\">\r\n    <div class=\"overlay-background\"></div>\r\n   \r\n        <div id=\"loading\">\r\n                   <ul class=\"bokeh\">\r\n                        <li></li>\r\n                         <li></li>\r\n                         <li></li>\r\n                       </ul>\r\n                     </div>\r\n    \r\n</div>","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { OverlayRequestResponseInterceptor } from './overlay-request-response.interceptor';\r\nimport { OverlayComponent } from './overlay.component';\r\nimport { EnsureModuleLoadedOnceGuard } from '../ensure-module-loaded-once.guard';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [OverlayComponent],\r\n  declarations: [OverlayComponent],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: OverlayRequestResponseInterceptor,\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class OverlayModule extends EnsureModuleLoadedOnceGuard {    // Ensure that OverlayModule is only loaded into AppModule\r\n\r\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\r\n  constructor(@Optional() @SkipSelf() parentModule: OverlayModule) {\r\n    super(parentModule);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CoreService {\r\n    private httpInProcess = new BehaviorSubject<boolean>(false);\r\n    public httpInProcess$: Observable<boolean>  = this.httpInProcess.asObservable();\r\n\r\n    public callHttpRequest(res: boolean) {\r\n      this.httpInProcess.next(res);\r\n    }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { of, throwError } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nexport abstract class AppHttpErrorHandler {\r\n    router: Router;\r\n    toast: ToastrService;\r\n    public constructor(public routerP: Router, public toastP: ToastrService) {\r\n        this.router = routerP;\r\n        this.toast = toastP;\r\n    }\r\n\r\n    public handleError(res: HttpErrorResponse) {\r\n    switch (true) {\r\n      case (res.status === 401):\r\n        sessionStorage.clear();\r\n        this.router.navigate([ '/' ]);\r\n        return of(null);\r\n\r\n      case (res.status >= 500):\r\n        this.toast.error('Unexpected server error');\r\n        return throwError(res);\r\n\r\n      case (!!res.error.message || !!res.message):\r\n        this.toast.error(res.error.message || res.message);\r\n        return throwError(res);\r\n\r\n      default:\r\n        return throwError(res);\r\n    }\r\n  }\r\n\r\n\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { UserLogin } from 'src/app/models/userLogin';\r\nimport { UserService } from '../user/services/user.service';\r\nimport { UserSession } from 'src/app/models/userSession';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  public userLogin: UserLogin = { userName: '', userPassword: '' };\r\n  public userSession$: Observable<UserSession> = this.session.userSession$;\r\n  public sub: Subscription;\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private session: UserService,\r\n              private toast: ToastrService) { }\r\n\r\n  public ngOnInit(): void {\r\n    // this.sub = this.userSession$.subscribe((res: UserSession) => {\r\n    //   if (res) {\r\n    //     this.router.navigate([ '..', 'container' ], { relativeTo: this.route });\r\n    //   }\r\n    // },\r\n    // (err) => this.toast.warning(err));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  //  this.sub.unsubscribe();\r\n  }\r\n\r\n  public onSubmit(form) {\r\n   // this.session.authenticate(this.userLogin);\r\n   this.logAsGuest();\r\n  }\r\n\r\n  public logAsGuest() {\r\n    this.router.navigate([ '..', 'container' ], { relativeTo: this.route });\r\n  }\r\n}\r\n","\r\n<form class=\"back\" #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n<div class=\"container\">\r\n\t<div class=\"d-flex justify-content-center h-100\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-header\">\r\n\t\t\t\t<h3>Ingresa:</h3>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"userName\" #userName=\"ngModel\" [(ngModel)]=\"userLogin.userName\"  class=\"form-control\" placeholder=\"user name\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"password\" name=\"userPassword\" #userPassword=\"ngModel\" [(ngModel)]=\"userLogin.userPassword\" class=\"form-control\" placeholder=\"password\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row align-items-center remember\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n                        <input type=\"button\" value=\"Invitado\" class=\"btn float-left login_btn\" (click)=\"logAsGuest()\">\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Admin\" class=\"btn float-right login_btn\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UserLogin, UserModel } from '../../../models/userLogin';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { UserSession } from '../../../models/userSession';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppHttpErrorHandler } from '../../../core/utils/errorHandler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService extends AppHttpErrorHandler  {\r\n  private readonly BASEURL = environment.baseUrlApi;\r\n  constructor(private http: HttpClient,\r\n              public router: Router,\r\n              public toast: ToastrService) {\r\n     super(router, toast);\r\n   }\r\n\r\n  public authenticate(userLogin: UserLogin): Observable<UserSession> {\r\n    return this.http.post<UserSession>(this.BASEURL + 'useritems/authenticate', userLogin)\r\n    .pipe(\r\n      catchError((err) => this.handleError(err))\r\n      );\r\n  }\r\n\r\n  public createUser(userModel: UserModel): Observable<boolean> {\r\n    const params = {\r\n      userName: userModel.userName,\r\n      userPassword: userModel.userPassword,\r\n      userRole: userModel.userAdmin ? 'admin' : 'user',\r\n    };\r\n    return this.http.post<boolean>(this.BASEURL + 'useritems', params);\r\n  }\r\n\r\n  public updateUser(userModel: UserModel): Observable<boolean> {\r\n    const params = {\r\n      userName: userModel.userName,\r\n      userPassword: userModel.userPassword,\r\n      userRole: userModel.userAdmin ? 'admin' : 'user',\r\n    };\r\n    return this.http.put<boolean>(this.BASEURL + 'useritems/' + userModel.userName, params);\r\n  }\r\n\r\n  public deleteUser(userName: string): Observable<boolean> {\r\n    return this.http.delete<boolean>(this.BASEURL + 'useritems/' + userName);\r\n  }\r\n\r\n  public getUsers(): Observable<[UserSession]> {\r\n    return this.http.get<any>(this.BASEURL + 'useritems');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { UserSession } from 'src/app/models/userSession';\r\nimport { UserLogin, UserModel } from 'src/app/models/userLogin';\r\nimport { ApiService } from '../api/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public userSession$ = new Observable<UserSession>();\r\n  private userSession = new BehaviorSubject<UserSession>(null);\r\n\r\n  public newUserAdded$ = new Observable();\r\n  private newUserAdded = new Subject();\r\n  constructor(private service: ApiService) {\r\n    this.userSession$ = this.userSession.asObservable();\r\n    this.newUserAdded$ = this.newUserAdded.asObservable();\r\n  }\r\n\r\n  public authenticate(userInfo: UserLogin): void {\r\n\r\n    this.service.authenticate(userInfo).pipe(shareReplay(1),\r\n      catchError( err => throwError(err))).\r\n      subscribe((res: UserSession) => this.userSession.next(res));\r\n  }\r\n\r\n  public notifyNewUser(): void {\r\n    this.newUserAdded.next();\r\n  }\r\n\r\n  public getUsers(): Observable<[UserSession]> {\r\n    return this.service.getUsers();\r\n  }\r\n\r\n  public createUser(userInfo: UserModel): Observable<boolean> {\r\n    return this.service.createUser(userInfo);\r\n  }\r\n\r\n  public updateUser(userInfo: UserModel): Observable<boolean> {\r\n    return this.service.updateUser(userInfo);\r\n  }\r\n\r\n  public deleteUser(userName: string): Observable<boolean> {\r\n    return this.service.deleteUser(userName);\r\n  }\r\n\r\n  public closeSession() {\r\n    this.userSession.next(null);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrlApi: 'https://ghdistributedservicespreparationv1.azurewebsites.net/api/',\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}